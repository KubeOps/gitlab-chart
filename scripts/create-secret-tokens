#!/bin/bash

set -e

KUBE_COMMAND=$(which kubectl)

OPTS=`getopt -o n:h --long namespace:,shell-name:,shell-key:,gitaly-name:,gitaly-key:,help -n 'create-secret-tokens' -- "$@"`
eval set -- "$OPTS"

NAMESPACE_CMD=""
SHELL_SECRET_NAME="gitlab-shell-secret"
SHELL_SECRET_KEY="secret"
GITALY_SECRET_NAME="gitaly-secret"
GITALY_SECRET_KEY="token"

display_usage() {
cat <<-EOF
Generates random token values for GitLab Shell and Gitaly.

Uses kubectl to create these as Kubernetes Secrets in the cluster.

USAGE: create-secret-tokens [OPTIONS]

OPTIONS

  -n, --namespace='': If present, the kubernetes namespace where the secrets will be created.
  --shell-name='gitlab-shell-secret': The name for the Kubernetes Secret Object created for GitLab Shell.
  --shell-key='secret': The key name used to contain the token data within the GitLab Shell Kubernetes Secret.
  --gitaly-name='gitaly-secret': The name for the Kubernetes Secret Object created for Gitaly.
  --gitaly-key='token': The key name used to contain the token data within the Gitaly Kubernetes Secret.
  -h, --help: Displays this usage message.

EOF
return;
}

while [ ! $# -eq 0 ]
do
	case "$1" in
		--namespace | -n ) NAMESPACE="$2"; NAMESPACE_CMD="-n ${NAMESPACE}"; shift ;;
		--shell-name ) SHELL_SECRET_NAME="$2"; shift ;;
		--shell-key ) SHELL_SECRET_KEY="$2"; shift ;;
		--gitaly-name ) GITALY_SECRET_NAME="$2"; shift ;;
		--gitaly-key ) GITALY_SECRET_KEY="$2"; shift ;;
		--help | -h ) display_usage; exit 0 ;;
	esac
	shift
done

# Create shell secret token if it doesn't exist
if ! $KUBE_COMMAND ${NAMESPACE_CMD} get secret ${SHELL_SECRET_NAME} > /dev/null 2>&1; then
  $KUBE_COMMAND ${NAMESPACE_CMD} create secret generic ${SHELL_SECRET_NAME} --from-literal=${SHELL_SECRET_KEY}=$(head -c 512 /dev/urandom | tr -cd 'a-zA-Z0-9' | head -c 64)
fi

# Create gitaly secret token if it doesn't exist
if ! $KUBE_COMMAND ${NAMESPACE_CMD} get secret ${GITALY_SECRET_NAME} > /dev/null 2>&1; then
 $KUBE_COMMAND ${NAMESPACE_CMD} create secret generic ${GITALY_SECRET_NAME} --from-literal=${GITALY_SECRET_KEY}=$(head -c 512 /dev/urandom | tr -cd 'a-zA-Z0-9' | head -c 64)
fi
