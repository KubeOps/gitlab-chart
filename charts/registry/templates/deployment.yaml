{{- if .Values.enabled -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      initContainers:
        - name: configure
          image: {{ .Values.init.image }}:{{ .Values.init.tag}}
          imagePullPolicy: {{ .Values.init.pullPolicy }}
          command: ["sh", "/config/configure"]
          volumeMounts:
            - name: registry-secrets
              mountPath: /config
            - name: registry-server-config
              mountPath: /registry
      containers:
        - name: registry
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
          volumeMounts:
          - name: registry-server-config
            mountPath: /etc/docker/registry/
            readOnly: true
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: registry-server-config
        emptyDir:
          medium: "Memory"
      - name: registry-secrets
        projected:
          sources:
          - configMap:
              name: {{ template "fullname" . }}
          - secret:
              name: {{ .Values.certificate.secret }}
              items:
                  - key: {{ .Values.certificate.key }}
                    path: certificate.crt
          {{- if .Values.minio.enabled }}
          - secret:
              name: {{ .Values.minio.credentials.secret }}
          {{- end }}
{{- end -}}
