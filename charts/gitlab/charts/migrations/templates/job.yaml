{{- if .Values.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "migrations.jobname" . }}
  labels:
    app: {{ template "migrations.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        app: {{ template "migrations.name" . }}
        release: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      initContainers:
        - name: configure
          command: ['sh', '/config/configure']
          image: busybox
          volumeMounts:
          - name: migrations-config
            mountPath: /config
            readOnly: true
          - name: init-migrations-redis
            mountPath: /initconfig/redis
            readOnly: true
          - name: init-migrations-postgres
            mountPath: /initconfig/postgres
            readOnly: true
          - name: migrations-postgres
            mountPath: /postgres
            readOnly: false
          - name: migrations-redis
            mountPath: /redis
            readOnly: false
      restartPolicy: OnFailure
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          args:
            - /scripts/db-migrate
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/var/opt/gitlab/config/gitlab/'
            {{- if .Values.initialRootPassword}}
            - name: GITLAB_ROOT_PASSWORD
              value: {{ .Values.initialRootPassword | quote }}
            {{- end }}
          volumeMounts:
            - name: migrations-config
              mountPath: '/var/opt/gitlab/templates'
            - name: migrations-redis
              mountPath: '/etc/gitlab-redis'
              readOnly: true
            - name: migrations-postgres
              mountPath: '/etc/gitlab-postgres'
              readOnly: true
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: migrations-config
        configMap:
          name: {{ template "migrations.fullname" . }}
      - name: migrations-redis
        emptyDir:
          medium: "Memory"
      - name: init-migrations-redis
        secret:
          secretName: {{ .Values.redis.password.secret }}
          items:
            - key: {{ .Values.redis.password.key }}
              path: password
          defaultMode: 0400
      - name: init-migrations-postgres
        secret:
          secretName: {{ .Values.psql.password.secret }}
          items:
            - key: {{ .Values.psql.password.key }}
              path: psql-password
          defaultMode: 0400
      - name: migrations-postgres
        emptyDir:
          medium: "Memory"
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
{{- end }}
