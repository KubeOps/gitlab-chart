{{- if .Values.enabled }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yml") . | sha256sum }}
    spec:
      initContainers:
        - name: configure
          command: ['sh', '/config/configure']
          image: busybox
          volumeMounts:
          - name: unicorn-config
            mountPath: /config
            readOnly: true
          - name: init-unicorn-registry
            mountPath: /initconfig/registry
            readOnly: true
          - name: init-unicorn-redis
            mountPath: /initconfig/redis
            readOnly: true
          - name: init-unicorn-gitaly
            mountPath: /initconfig/gitaly
            readOnly: true
          - name: init-unicorn-shell
            mountPath: /initconfig/shell
            readOnly: true

          - name: unicorn-redis
            mountPath: /redis
            readOnly: false
          - name: unicorn-shell
            mountPath: /shell
            readOnly: false
          - name: unicorn-gitaly
            mountPath: /gitaly
            readOnly: false
          - name: unicorn-registry
            mountPath: /registry
            readOnly: false

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
              name: unicorn
            - containerPort: {{ .Values.service.workhorseInternalPort }}
              name: workhorse
          env:
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/var/opt/gitlab/config/gitlab/'
            - name: GITLAB_HOST
              value: {{ template "gitlabHost" . }}
          volumeMounts:
            - name: unicorn-config
              mountPath: '/var/opt/gitlab/templates'
            - name: unicorn-shell
              mountPath: '/etc/gitlab-shell'
              readOnly: true
            - name: unicorn-gitaly
              mountPath: '/etc/gitaly'
              readOnly: true
            - name: unicorn-redis
              mountPath: '/etc/gitlab-redis'
              readOnly: true
            - name: unicorn-registry
              mountPath: '/etc/gitlab-registry'
          livenessProbe:
            exec:
              command:
              - /scripts/healthcheck
            initialDelaySeconds: 20
            timeoutSeconds: 30
            periodSeconds: 60
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: unicorn-config
        configMap:
          name: {{ template "fullname" . }}
      - name: init-unicorn-shell
        secret:
          secretName: {{ .Values.shell.authToken.secret }}
          items:
            - key: {{ default "secret" .Values.shell.authToken.key }}
              path: ".gitlab_shell_secret"
          defaultMode: 0400
      - name: init-unicorn-gitaly
        secret:
          secretName: {{ .Values.gitaly.authToken.secret }}
          items:
            - key: {{ default "token" .Values.gitaly.authToken.key }}
              path: "gitaly_token"
          defaultMode: 0400
      - name: init-unicorn-redis
        secret:
          secretName: {{ .Values.redis.password.secret }}
          items:
            - key: {{ .Values.redis.password.key }}
              path: password
          defaultMode: 0400
      - name: init-unicorn-registry
        secret:
          secretName: {{ .Values.registry.certificate.secret }}
          items:
            - key: {{ .Values.registry.certificate.key }}
              path: gitlab-registry.key
          defaultMode: 0400
      - name: unicorn-shell
        emptyDir:
          medium: "Memory"
      - name: unicorn-gitaly
        emptyDir:
          medium: "Memory"
      - name: unicorn-redis
        emptyDir:
          medium: "Memory"
      - name: unicorn-registry
        emptyDir:
          medium: "Memory"
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
{{- end }}
