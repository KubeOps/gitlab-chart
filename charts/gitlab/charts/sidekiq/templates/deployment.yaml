{{- if .Values.enabled -}}
{{- $chart := printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" -}}
{{- $name := default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" -}}
{{- $releaseName := .Release.Name -}}
{{- $releaseService := .Release.Service -}}
{{- $fullname := printf "%s-%s" $releaseName $name | trunc 63 | trimSuffix "-" -}}
{{- $image := printf "%s:%s" .Values.image.repository .Values.image.tag -}}
{{- $imagePullPolicy := .Values.imagePullPolicy -}}
{{- $replicas := .Values.replicaCount -}}
{{- $concurrency := .Values.concurrency -}}
{{- $timeout := .Values.timeout -}}
{{- $redisSecret := .Values.redis.password.secret -}}
{{- $redisKey := .Values.redis.password.key -}}
{{- $postgresSecret := .Values.psql.password.secret -}}
{{- $postgresKey := .Values.psql.password.key -}}
{{- $gitalySecret := .Values.gitaly.authToken.secret -}}
{{- $gitalyKey := default "token" .Values.gitaly.authToken.key -}}
{{- /* The below is an messy attempt to read in, and reflect on the configmap-queues.yaml template. */}}
{{- $queueConfigList := include (print $.Template.BasePath "/configmap-queue.yaml") . | split "\n---" }}
{{- $queues := dict }}
{{- range $k,$v := $queueConfigList }}
{{-   $tmpConfig := $v | fromYaml }}
{{-   $md := $tmpConfig.metadata }}
{{-   $labels :=  $md.labels }}
{{-   $_ := set $queues ( $labels.queue_pod_name | quote ) ( $v | quote ) }}
{{- end }}
{{- $configMapChecksum := include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
{{- range .Values.pods -}}
{{- $queueName := printf "%s-%s" $fullname .name | trunc 63}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ $queueName }}
  labels:
    app: {{ $name }}
    chart: {{ $chart }}
    release: {{ $releaseName }}
    heritage: {{ $releaseService }}
    queue-pod-name: {{ .name }}
spec:
  replicas: {{ default $replicas .replicas }}
  template:
    metadata:
      labels:
        app: {{ $name }}
        release: {{ $releaseName }}
      annotations:
        checksum/configmap: {{ $configMapChecksum }}
        checksum/configmap-pod: {{ pluck ( .name | quote ) $queues | last | sha256sum }}
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      initContainers:
        - name: configure
          command: ['sh', '/config/configure']
          image: busybox
          volumeMounts:
          - name: sidekiq-config
            mountPath: /config
            readOnly: true
          - name: init-sidekiq-secrets
            mountPath: /init-secrets
            readOnly: true
          - name: sidekiq-secrets
            mountPath: /sidekiq-secrets
            readOnly: false
        - name: {{ $name }}-dependencies
          image: "{{ $image }}"
          imagePullPolicy: {{ $imagePullPolicy }}
          args:
            - /scripts/wait-for-deps
          env:
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/home/git/gitlab/config'
            - name: SIDEKIQ_CONCURRENCY
              value: {{ default $concurrency .concurrency | quote }}
            - name: SIDEKIQ_TIMEOUT
              value: {{ default $timeout .timeout | quote }}
            - name: WAIT_FOR_TIMEOUT
              value: "10"
          volumeMounts:
          - name: sidekiq-config
            mountPath: '/var/opt/gitlab/templates'
            readOnly: true
          - name: sidekiq-gitaly
            mountPath: '/etc/gitaly'
            readOnly: true
          - name: sidekiq-redis
            mountPath: '/etc/gitlab-redis'
            readOnly: true
          - name: sidekiq-postgres
            mountPath: '/etc/gitlab-postgres'
            readOnly: true
          volumeMounts:
          - name: sidekiq-config
            mountPath: '/var/opt/gitlab/templates'
            readOnly: true
          - name: sidekiq-secrets
            mountPath: '/etc/gitlab'
            readOnly: true
      containers:
        - name: {{ $name }}
          image: "{{ $image }}"
          imagePullPolicy: {{ $imagePullPolicy }}
          env:
            - name: GITALY_FEATURE_DEFAULT_ON
              value: "1"
            - name: CONFIG_TEMPLATE_DIRECTORY
              value: '/var/opt/gitlab/templates'
            - name: CONFIG_DIRECTORY
              value: '/home/git/gitlab/config'
            - name: SIDEKIQ_CONCURRENCY
              value: {{ default $concurrency .concurrency | quote }}
            - name: SIDEKIQ_TIMEOUT
              value: {{ default $timeout .timeout | quote }}
          volumeMounts:
          - name: sidekiq-config
            mountPath: '/var/opt/gitlab/templates'
            readOnly: true
          - name: sidekiq-secrets
            mountPath: '/etc/gitlab'
            readOnly: true
          # livenessProbe:
          #   exec:
          #     command:
          #       - head
          #       - -c1
          #       - /dev/random
          readinessProbe:
            exec:
              command:
                - head
                - -c1
                - /dev/random
          resources:
{{ toYaml .resources | indent 12 }}
      volumes:
      - name: sidekiq-config
        projected:
          sources:
            - configMap:
                name: {{ $fullname }}
            - configMap:
                name: {{ $queueName }}
      - name: init-sidekiq-secrets
        projected:
          defaultMode: 0400
          sources:
          - secret:
              name: {{ $gitalySecret }}
              items:
                - key: {{ $gitalyKey }}
                  path: gitaly/gitaly_token
          - secret:
              name: {{ $redisSecret }}
              items:
                - key: {{ $redisKey }}
                  path: redis/password
          - secret:
              name: {{ $postgresSecret }}
              items:
                - key: {{ $postgresKey }}
                  path: postgres/psql-password
      - name: sidekiq-secrets
        emptyDir:
          medium: "Memory"
    {{- if .nodeSelector }}
      nodeSelector:
{{ toYaml .nodeSelector | indent 8 }}
    {{- end }}
---
{{-   end -}}
{{- end }}
