{{- if .Values.enabled }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      initContainers:
        - name: configure
          command: ['sh', '/config/configure']
          image: busybox
          volumeMounts:
          - name: gitlab-config
            mountPath: /config
            readOnly: true
          - name: init-gitlab-secrets
            mountPath: /initconfig
            readOnly: true
          - name: gitlab-postgres
            mountPath: /postgres
            readOnly: false
          - name: gitlab-redis
            mountPath: /redis
            readOnly: false
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.ports.psql }}
              name: og-psql
          volumeMounts:
            - name: gitlab-config
              mountPath: '/etc/gitlab'
            - name: gitlab-redis
              mountPath: '/etc/gitlab-redis'
              readOnly: true
            - name: gitlab-postgres
              mountPath: '/etc/gitlab-postgres'
              readOnly: true
          # livenessProbe:
          #   initialDelaySeconds: 180
          #   timeoutSeconds: 15
          #   httpGet:
          #     path: /help
          #     port: {{ .Values.service.ports.workhorse }}
          # readinessProbe:
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 1
          #   httpGet:
          #     path: /help
          #     port: {{ .Values.service.ports.workhorse }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: gitlab-config
        configMap:
          name: {{ template "fullname" . }}
          items:
          - key: gitlab.rb
            path: gitlab.rb
          - key: configure
            path: configure
      - name: init-gitlab-secrets
        projected:
          defaultMode: 0400
          sources:
          - secret:
              name: {{ .Values.redis.password.secret }}
              items:
                - key: {{ .Values.redis.password.key }}
                  path: redis/password
          - secret:
              name: {{ .Values.psql.password.secret }}
              items:
                - key: {{ .Values.psql.password.key }}
                  path: postgres/psql-password
      - name: gitlab-postgres
        emptyDir:
          medium: "Memory"
      - name: gitlab-redis
        emptyDir:
          medium: "Memory"
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
{{- end }}
