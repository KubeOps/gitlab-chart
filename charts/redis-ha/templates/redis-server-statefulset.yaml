{{- if .Values.enabled }}
{{- if .Values.persistentVolume.enabled }}
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  # Pay attention to the redis-role label at runtime. The self-determination logic in the image sets this value accordingly.
  name: {{ template "fullname" . }}-server
  labels:
    name: "redis-server"
    redis-node: "true"
{{ include "labels.standard" . | indent 4 }}
spec:
  serviceName: {{ template "fullname" . }}
  replicas: {{ .Values.replicas.servers }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/redis-configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "fullname" . }}
        name: "redis-server"
        redis-node: "true"
{{ include "labels.standard" . | indent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "fullname" . }}
                - key: redis-role
                  operator: In
                  values:
                  - master
                  - slave
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 2000
        fsGroup: 2000
      initContainers:
        - name: configure
          image: busybox
          command: ['sh', '/config/configure']
          volumeMounts:
          - name: {{ .Release.Name }}
            mountPath: /config
            readOnly: true
          - name: {{ .Release.Name }}-config
            mountPath: /redis
            readOnly: false
      serviceAccountName: {{ template "redis-ha.serviceAccountName" . }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      containers:
      - name: redis
        image: {{ .Values.redis_image }}
        resources:
{{ toYaml .Values.resources.server | indent 10 }}
        env:
          - name: REDIS_SENTINEL_SERVICE_HOST
            value: "redis-sentinel"
          - name: REDIS_CHART_PREFIX
            value: {{ template "fullname" . }}
          - name: REDIS_PASSWORD_FILE
            value: "/etc/redis/pass"
        ports:
          - containerPort: 6379
        volumeMounts:
          - mountPath: /redis-master-data 
            name: data
          - name: {{ .Release.Name }}-config
            mountPath: /etc/redis/
      volumes:
      - name: {{ .Release.Name }}-config
        emptyDir:
          medium: "Memory"
      - name: {{ .Release.Name }}
        projected:
          sources:
          - configMap:
              name: {{ template "fullname" . }}
              items:
                - key: redis-master.conf
                  path: redis-master.conf
                - key: redis-slave.conf
                  path: redis-slave.conf
                - key: configure
                  path: configure
          - secret:
              name: {{ .Values.password.secret }}
              items:
                - key: {{ .Values.password.key }}
                  path: password
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: {{.Values.persistentVolume.accessModes}}
        resources:
          requests:
            storage: {{ .Values.persistentVolume.size | quote }}
    {{- end -}}
{{- end -}}
