{{- if .Values.enabled -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      initContainers:
        - name: configure
          image: busybox
          command: ['sh', '/config/configure']
          volumeMounts:
          - name: {{ .Release.Name }}
            mountPath: /config
            readOnly: true
          - name: {{ .Release.Name }}-config
            mountPath: /redis
            readOnly: false
      containers:
        - name: redis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
          ports:
            - name: redis
              containerPort: {{ .Values.service.internalPort }}
          args:
          - redis-server
          - /etc/redis/redis.conf
          volumeMounts:
          - name: {{ .Release.Name }}-config
            mountPath: /etc/redis/
            readOnly: true
          - name: {{ .Release.Name }}-data
            mountPath: /data/redis/
            {{- if and .Values.persistence.enabled .Values.persistence.subPath }}
            subPath: "{{ .Values.persistence.subPath }}"
            {{- end }}
            readOnly: false
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: {{ .Release.Name }}-config
        emptyDir:
          medium: "Memory"
      - name: {{ .Release.Name }}
        projected:
          defaultMode: 0644
          sources:
          - configMap:
              name: {{ template "fullname" . }}
              items:
              - key: redis.conf
                path: redis.conf
              - key: configure
                path: configure
          - secret:
              name: {{ .Values.password.secret }}
              items:
                - key: {{ .Values.password.key }}
                  path: password
      - name: {{ .Release.Name }}-data
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}
        {{- else }}
        emptyDir: {}
        {{- end }}
{{- end -}}
