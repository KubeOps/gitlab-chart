{{- if and .Values.enabled .Values.defaultBuckets }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "minio.fullname" . }}-create-bucket
  labels:
    app: {{ template "minio.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": post-install
    #"helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        app: {{ template "minio.fullname" . }}
        release: {{ .Release.Name }}
    spec:
      restartPolicy: OnFailure
    {{- if .Values.nodeSelector }}
      nodeSelector:
    {{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
        - name: minio-user
          secret:
            secretName: {{ .Values.credentials.secret }}
      containers:
      - name: minio-mc
        image: minio/mc
        command: ["/bin/sh", "-c",
        "set -e ;
        ATTEMPTS=0 ; LIMIT=30 ;
        ACCESS=$(cat /secrets/accesskey) ; SECRET=$(cat /secrets/secretkey) ;
        echo \"$MINIO_ENDPOINT\" > ENDPOINT
        set +e ;
        echo \"Connecting to Minio server: http://$MINIO_ENDPOINT:9000\" ;
        MC_COMMAND=\"mc  config host add myminio http://$MINIO_ENDPOINT:9000 $ACCESS $SECRET\" ;
        $MC_COMMAND ;
        STATUS=$? ;
        until [ $STATUS ] ;
        do
          ATTEMPTS=`expr $ATTEMPTS + 1` ;
          echo \"Failed attempts: $ATTEMPTS\" ;
          if [ $ATTEMPTS -gt $LIMIT ]; then
            exit 1 ;
          fi ;
          sleep 1 ;
          $MC_COMMAND ;
          STATUS=$? ;
        done ;
        {{- range $bucket := .Values.defaultBuckets }}
        {{-   if default false .purge | eq true }}
        set +e ;
        /usr/bin/mc rm -r --force myminio/{{ .name }};
        set -e ;
        {{-   end }}
        /usr/bin/mc mb myminio/{{ .name }};
        /usr/bin/mc policy {{ default "none" .policy }} myminio/{{ .name }};
        {{- end }}
        sleep 900 ;"]
        env:
          - name: MINIO_ENDPOINT
            value: {{ template "minio.fullname" . }}-svc
        volumeMounts:
          - name: minio-user
            mountPath: /secrets
    {{- end }}
